{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAAM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAY,SAAS,gBAAgB,CAAC,qB,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IACtC,EAAa,EAAE,CAErB,EAAM,OAAO,CAAC,SAAC,CAAf,EACE,IAAM,EAAY,EAAI,SAAS,CAAC,OAAO,CAAC,MAAO,IAE1C,MAAM,IACT,EAAW,IAAI,CAAC,CAAC,EAErB,GAIA,IAAM,EAAsB,AAFR,EAAW,MAAM,CAAC,SAAC,CAAA,CAAK,CAA5C,EAAoD,OAAA,EAAM,C,GAGvD,QAAQ,GACR,OAAO,CAAC,wBAAyB,KAK9B,EAAwB,KAAK,KAAK,CAFtC,EAAW,MAAM,CAAC,SAAC,CAAA,CAAK,CAD1B,EACkC,OAAA,EAAM,CAAO,GAAA,EAAW,MAAM,EAG7D,QAAQ,GACR,OAAO,CAAC,wBAAyB,IAEpC,CAAA,SAAS,aAAa,CAAC,yBAAyB,WAAW,CACzD,EAEF,SAAS,aAAa,CAAC,2BAA2B,WAAW,CAC3D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["// 'use strict';\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar sorce = _to_consumable_array(document.querySelectorAll(\"span.population\"));\nvar population = [];\nsorce.forEach(function(pop) {\n    var popNumber = pop.innerText.replace(/,/gi, \"\");\n    if (!isNaN(popNumber)) population.push(+popNumber);\n});\nvar totalResult = population.reduce(function(acc, val) {\n    return acc + val;\n});\nvar totalResultFormated = totalResult.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\nvar averagrResult = population.reduce(function(acc, val) {\n    return acc + val;\n}) / population.length;\nvar averagrResultFormated = Math.floor(averagrResult).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\ndocument.querySelector(\"span.total-population\").textContent = totalResultFormated;\ndocument.querySelector(\"span.average-population\").textContent = averagrResultFormated;\n\n//# sourceMappingURL=index.3087e795.js.map\n","// 'use strict';\n\nconst sorce = [...document.querySelectorAll('span.population')];\nconst population = [];\n\nsorce.forEach((pop) => {\n  const popNumber = pop.innerText.replace(/,/gi, '');\n\n  if (!isNaN(popNumber)) {\n    population.push(+popNumber);\n  }\n});\n\nconst totalResult = population.reduce((acc, val) => acc + val);\n\nconst totalResultFormated = totalResult\n  .toString()\n  .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\nconst averagrResult =\n  population.reduce((acc, val) => acc + val) / population.length;\n\nconst averagrResultFormated = Math.floor(averagrResult)\n  .toString()\n  .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\ndocument.querySelector('span.total-population').textContent =\n  totalResultFormated;\n\ndocument.querySelector('span.average-population').textContent =\n  averagrResultFormated;\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","sorce","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","population","forEach","pop","popNumber","innerText","replace","isNaN","push","totalResultFormated","totalResult","reduce","acc","val","averagrResultFormated","Math","floor","querySelector","textContent"],"version":3,"file":"index.3087e795.js.map"}